1
00:00:05,333 --> 00:00:06,900
large language models are very good

2
00:00:06,900 --> 00:00:09,900
at transforming its input to a different format

3
00:00:09,900 --> 00:00:12,600
such as inputting a piece of text in one language

4
00:00:12,666 --> 00:00:15,166
and transforming it or translating it

5
00:00:15,166 --> 00:00:16,800
to a different language

6
00:00:16,900 --> 00:00:19,366
or helping with spelling and grammar corrections

7
00:00:19,366 --> 00:00:20,966
so taking us in for the piece of tech

8
00:00:21,066 --> 00:00:23,000
that may not be fully grammatical

9
00:00:23,000 --> 00:00:24,966
and helping you to fix that up a bit

10
00:00:25,266 --> 00:00:29,300
or even transforming formats such as inputting HTML

11
00:00:29,333 --> 00:00:31,200
and outputting JSN

12
00:00:31,300 --> 00:00:33,366
so there's a bunch of applications that

13
00:00:33,366 --> 00:00:34,200
I used to write

14
00:00:34,200 --> 00:00:36,066
somewhat painfully with a bunch of regular

15
00:00:36,066 --> 00:00:37,000
expressions that would

16
00:00:37,100 --> 00:00:37,766
definitely be

17
00:00:37,766 --> 00:00:38,166
much more

18
00:00:38,166 --> 00:00:40,600
simply implemented now with a large language model

19
00:00:40,600 --> 00:00:41,733
and a few prompts

20
00:00:42,166 --> 00:00:45,100
yeah I use charge GBT to proofread pretty much

21
00:00:45,100 --> 00:00:46,666
everything I write these days

22
00:00:46,666 --> 00:00:48,066
so I'm excited to show you

23
00:00:48,066 --> 00:00:49,866
some more examples in the notebook now

24
00:00:51,066 --> 00:00:55,600
so first we'll import Openai and also

25
00:00:56,366 --> 00:00:57,100
use the same

26
00:00:57,100 --> 00:00:59,533
Gat completion helper function that we've been using

27
00:00:59,566 --> 00:01:01,000
throughout the videos

28
00:01:01,400 --> 00:01:04,566
and the first thing we'll do is a translation task

29
00:01:04,700 --> 00:01:07,200
so large language models are trained on

30
00:01:07,200 --> 00:01:08,666
a lot of text from

31
00:01:08,700 --> 00:01:10,566
many sources a lot of which is the internet

32
00:01:10,566 --> 00:01:11,366
and this is

33
00:01:11,400 --> 00:01:13,100
kind of of course in many different languages

34
00:01:13,100 --> 00:01:14,866
so this kind of imbues the model

35
00:01:14,866 --> 00:01:16,733
with the ability to do translation

36
00:01:17,000 --> 00:01:19,533
and these models know kind of hundreds of languages

37
00:01:19,533 --> 00:01:21,366
to varying degrees of proficiency

38
00:01:21,700 --> 00:01:22,700
and so we'll go through

39
00:01:22,700 --> 00:01:25,166
some examples of how to use this capability

40
00:01:26,500 --> 00:01:28,333
so let's start off with something simple

41
00:01:29,200 --> 00:01:31,666
so in this first example the prompt is

42
00:01:31,800 --> 00:01:34,733
translate the following English text to Spanish

43
00:01:35,200 --> 00:01:37,066
hi I would like to order a blender

44
00:01:37,400 --> 00:01:43,466
and the response is ola mi gustaria or dena una liquid

45
00:01:43,800 --> 00:01:44,533
kuadora

46
00:01:44,533 --> 00:01:47,866
and I'm very sorry to all of you Spanish speakers

47
00:01:47,866 --> 00:01:49,800
I never Learned Spanish unfortunately

48
00:01:50,200 --> 00:01:52,000
as you can definitely tell

49
00:01:53,566 --> 00:01:56,133
okay let's try another example

50
00:01:56,666 --> 00:01:57,466
so

51
00:01:58,400 --> 00:01:59,566
in this example

52
00:01:59,666 --> 00:02:02,866
the prompt is tell me what language this is

53
00:02:03,800 --> 00:02:08,600
and then this is in French combiancutlu lampedare

54
00:02:09,066 --> 00:02:10,266
and so let's run this

55
00:02:12,166 --> 00:02:15,566
and the model has identified that this is French

56
00:02:17,800 --> 00:02:21,133
the model can also do multiple translations at once

57
00:02:21,766 --> 00:02:23,133
so in this example

58
00:02:23,133 --> 00:02:23,666
let's say

59
00:02:23,666 --> 00:02:26,400
translate the following text to French and Spanish

60
00:02:27,333 --> 00:02:30,333
and you know what let's add another and English

61
00:02:31,500 --> 00:02:32,300
pirate

62
00:02:34,100 --> 00:02:36,866
and the text is I want to order a basketball

63
00:02:40,666 --> 00:02:42,266
so here we have French

64
00:02:42,600 --> 00:02:45,666
Spanish and English pirates

65
00:02:47,100 --> 00:02:48,400
so in some languages

66
00:02:48,400 --> 00:02:49,766
the translation can change

67
00:02:49,766 --> 00:02:52,766
depending on the speakers relationship to the listener

68
00:02:52,800 --> 00:02:56,000
and you can also explain this to the language model

69
00:02:56,000 --> 00:02:57,200
and so it will be able to

70
00:02:57,533 --> 00:02:59,466
kind of translate accordingly

71
00:02:59,766 --> 00:03:02,000
so in this example we say

72
00:03:02,000 --> 00:03:03,700
translate the following text to Spanish

73
00:03:03,700 --> 00:03:06,266
in both the formal and informal forms

74
00:03:06,266 --> 00:03:07,766
would you like to order a pillow

75
00:03:08,066 --> 00:03:11,100
and also notice here we're using a different delimiter

76
00:03:11,366 --> 00:03:13,000
than these baptics

77
00:03:13,000 --> 00:03:14,200
it doesn't really matter

78
00:03:14,200 --> 00:03:16,166
as long as it's kind of a clear separation

79
00:03:17,866 --> 00:03:21,000
so here we have the formal and informal

80
00:03:21,800 --> 00:03:24,066
so formal is when you're speaking to someone who's

81
00:03:24,066 --> 00:03:25,700
maybe senior to you or you're in a

82
00:03:25,700 --> 00:03:27,000
professional situation

83
00:03:27,133 --> 00:03:28,466
that's when you use a formal tone

84
00:03:28,466 --> 00:03:30,933
and then informal is when you're speaking to

85
00:03:31,066 --> 00:03:32,600
maybe a group of friends

86
00:03:32,866 --> 00:03:34,900
I don't actually speak Spanish but

87
00:03:34,933 --> 00:03:37,100
my dad does and he says that this is correct

88
00:03:38,133 --> 00:03:39,900
so for the next example

89
00:03:40,333 --> 00:03:43,133
we're going to pretend that we're in charge of a

90
00:03:43,366 --> 00:03:45,533
multinational e commerce company

91
00:03:45,533 --> 00:03:47,600
and so the user messages are going to be

92
00:03:47,600 --> 00:03:48,933
in all different languages

93
00:03:48,933 --> 00:03:51,133
and so users are going to be telling us about their it

94
00:03:51,266 --> 00:03:54,366
issues in a wide variety of languages

95
00:03:54,866 --> 00:03:57,266
so we need a universal translator

96
00:03:57,766 --> 00:03:59,733
so first we'll just paste in

97
00:03:59,766 --> 00:04:01,566
a list of user messages in

98
00:04:01,566 --> 00:04:03,500
a variety of different languages

99
00:04:04,766 --> 00:04:07,166
and now we will loop through

100
00:04:10,566 --> 00:04:11,566
each of these

101
00:04:11,933 --> 00:04:16,300
user messages so for issue in user messages

102
00:04:18,000 --> 00:04:20,066
and then I'm going to copy over

103
00:04:20,166 --> 00:04:21,800
this slightly longer code block

104
00:04:23,100 --> 00:04:26,333
and so the first thing we'll do is ask the model to

105
00:04:27,200 --> 00:04:29,566
tell us what language the issue is in

106
00:04:29,666 --> 00:04:31,366
so here's the prompt

107
00:04:31,666 --> 00:04:33,733
then we'll print out the

108
00:04:33,933 --> 00:04:36,866
original messages language and the issue

109
00:04:37,166 --> 00:04:39,800
and then we'll ask the model to translate it into

110
00:04:39,800 --> 00:04:40,866
English and Korean

111
00:04:42,700 --> 00:04:43,733
so let's run this

112
00:04:45,566 --> 00:04:47,600
so the original message in French

113
00:04:53,333 --> 00:04:54,866
so we have variety of languages

114
00:04:54,866 --> 00:04:56,733
and then the model translates

115
00:04:57,133 --> 00:04:59,133
them into English and then Korean

116
00:04:59,566 --> 00:05:01,166
and you can kind of see here

117
00:05:01,166 --> 00:05:04,266
so the model says this is French

118
00:05:04,500 --> 00:05:06,566
so that's because the

119
00:05:07,066 --> 00:05:10,000
response from this prompt is going to be this is French

120
00:05:10,066 --> 00:05:10,900
you could try

121
00:05:11,000 --> 00:05:12,800
editing this prompt to say something like

122
00:05:12,866 --> 00:05:15,733
tell me what language this is respond with only one

123
00:05:16,300 --> 00:05:18,866
with only one word or don't use a sentence

124
00:05:18,866 --> 00:05:19,533
that kind of thing

125
00:05:19,533 --> 00:05:21,666
if you wanted this to just speak one word

126
00:05:21,733 --> 00:05:22,300
or you could

127
00:05:22,300 --> 00:05:24,566
ask for it in a JSON format or something like that

128
00:05:24,566 --> 00:05:26,266
which would probably encourage it to

129
00:05:26,500 --> 00:05:27,900
not use a whole sentence

130
00:05:29,166 --> 00:05:33,766
and so amazing you've just built a universal translator

131
00:05:33,866 --> 00:05:36,266
and also feel free to pause the video

132
00:05:36,733 --> 00:05:38,200
and add kind of any

133
00:05:38,466 --> 00:05:40,366
other language you want to try here

134
00:05:40,366 --> 00:05:42,533
maybe languages you speak yourself

135
00:05:42,600 --> 00:05:44,300
and see how the model does

136
00:05:46,000 --> 00:05:47,700
so the next thing we're going to

137
00:05:47,733 --> 00:05:50,100
dive into is tone transformation

138
00:05:50,366 --> 00:05:53,133
writing can vary based on an intended audience

139
00:05:53,133 --> 00:05:55,766
you know the way that I would write an email to a

140
00:05:56,200 --> 00:05:58,333
colleague or a professor is

141
00:05:58,333 --> 00:05:59,066
obviously going to be

142
00:05:59,066 --> 00:06:01,466
quite different to the way I text my younger brother

143
00:06:01,900 --> 00:06:02,533
and so Chuck

144
00:06:02,533 --> 00:06:05,400
GBT can actually also help produce different tones

145
00:06:06,700 --> 00:06:09,200
so let's look at some examples

146
00:06:09,466 --> 00:06:11,266
so in this first example

147
00:06:11,866 --> 00:06:12,733
the prompt is

148
00:06:12,733 --> 00:06:13,333
translate

149
00:06:13,333 --> 00:06:15,700
the following from slang to a business letter

150
00:06:15,900 --> 00:06:17,100
dude this is Joe

151
00:06:17,100 --> 00:06:19,400
check out this spec on the standing lamp

152
00:06:21,100 --> 00:06:21,900
so

153
00:06:22,366 --> 00:06:23,500
execute this

154
00:06:26,300 --> 00:06:27,166
and as you can see

155
00:06:27,166 --> 00:06:30,333
we have a much more formal business letter

156
00:06:30,766 --> 00:06:34,266
with a proposal for a standing lamp specification

157
00:06:35,000 --> 00:06:37,366
the next thing that we're going to do is

158
00:06:37,533 --> 00:06:39,600
to combert between different formats

159
00:06:39,666 --> 00:06:40,300
chart GBT

160
00:06:40,300 --> 00:06:41,400
is very good at translating

161
00:06:41,400 --> 00:06:44,600
between different formats such as JSON to HTML

162
00:06:44,600 --> 00:06:46,700
you know XML all kinds of things

163
00:06:46,733 --> 00:06:47,533
Mark down

164
00:06:48,733 --> 00:06:49,900
and so in the prompt

165
00:06:49,900 --> 00:06:52,566
we'll describe both the input and the output formats

166
00:06:52,766 --> 00:06:55,700
so here is an example

167
00:06:55,933 --> 00:06:57,733
so we have this

168
00:06:58,066 --> 00:07:00,066
JSON that contains

169
00:07:00,133 --> 00:07:02,966
a list of restaurant employees with their name

170
00:07:02,966 --> 00:07:03,800
and email

171
00:07:04,500 --> 00:07:06,400
and then in the prompt

172
00:07:06,566 --> 00:07:07,466
we're going to

173
00:07:07,600 --> 00:07:11,800
ask the model to translate this from JSON to HTML

174
00:07:11,900 --> 00:07:13,100
so the prompt is

175
00:07:13,133 --> 00:07:14,100
translate the following

176
00:07:14,100 --> 00:07:16,200
Python dictionary from JSON to an

177
00:07:16,200 --> 00:07:19,266
HTML table with column headers and titles

178
00:07:21,700 --> 00:07:22,500
and

179
00:07:23,133 --> 00:07:23,966
then will

180
00:07:24,733 --> 00:07:26,200
get the response

181
00:07:26,700 --> 00:07:28,733
from the model and print it

182
00:07:30,000 --> 00:07:31,733
so here we have some

183
00:07:32,400 --> 00:07:37,300
HTML displaying all of the employee names and emails

184
00:07:38,566 --> 00:07:42,933
and so now let's see if we can actually view this HTML

185
00:07:43,466 --> 00:07:44,266
so

186
00:07:44,866 --> 00:07:46,733
we're going to use this display function

187
00:07:46,733 --> 00:07:50,533
from this Python library display HTML

188
00:07:50,866 --> 00:07:52,100
response

189
00:07:54,600 --> 00:07:58,200
and here you can see that this is a properly formatted

190
00:07:58,500 --> 00:07:59,366
HTML table

191
00:08:01,333 --> 00:08:04,300
the next transformation task we're going to do

192
00:08:04,466 --> 00:08:06,966
is spell check and grammar checking

193
00:08:07,000 --> 00:08:10,666
and this is a really kind of popular use for ChatGPT

194
00:08:10,666 --> 00:08:13,800
I highly recommend doing this I do this all the time

195
00:08:14,100 --> 00:08:14,400
and this is

196
00:08:14,400 --> 00:08:16,133
especially useful when you're working in a non

197
00:08:16,133 --> 00:08:17,200
native language

198
00:08:17,200 --> 00:08:19,100
and so here are some examples

199
00:08:19,133 --> 00:08:22,500
of some common grammar and spelling problems and how

200
00:08:22,600 --> 00:08:24,866
the language model can help address these

201
00:08:25,600 --> 00:08:27,300
so I'm going to paste in

202
00:08:27,400 --> 00:08:29,166
a list of

203
00:08:29,300 --> 00:08:32,866
sentences that have some grammatical or spelling errors

204
00:08:33,400 --> 00:08:35,133
and then we're going to

205
00:08:35,500 --> 00:08:38,333
loop through each of these sentences

206
00:08:41,800 --> 00:08:42,666
and

207
00:08:45,300 --> 00:08:47,066
ask the model to proofread these

208
00:08:49,300 --> 00:08:51,566
proofread and correct

209
00:08:52,000 --> 00:08:54,966
and then we'll use some dlimeters

210
00:09:04,400 --> 00:09:08,333
and then we will get the response and print it as usual

211
00:09:27,966 --> 00:09:31,066
and so the model is able to correct

212
00:09:31,400 --> 00:09:34,133
all of these grammatical errors

213
00:09:34,200 --> 00:09:34,766
we could use

214
00:09:34,766 --> 00:09:36,800
some of the techniques that we've discussed before

215
00:09:36,933 --> 00:09:37,733
so

216
00:09:38,266 --> 00:09:39,733
we could to improve the prompt

217
00:09:39,733 --> 00:09:41,333
we could say pre read and correct

218
00:09:41,533 --> 00:09:42,900
the following text

219
00:09:46,133 --> 00:09:47,766
and rewrite oh

220
00:09:56,466 --> 00:09:58,333
and rewrite the whole

221
00:10:02,366 --> 00:10:03,600
and rewrite it

222
00:10:04,900 --> 00:10:05,933
corrected

223
00:10:08,966 --> 00:10:10,300
version if you

224
00:10:10,733 --> 00:10:11,666
don't find

225
00:10:12,800 --> 00:10:14,100
any errors

226
00:10:14,900 --> 00:10:15,800
just say

227
00:10:16,966 --> 00:10:18,466
no errors found

228
00:10:21,266 --> 00:10:22,333
let's try this

229
00:10:26,566 --> 00:10:28,133
so this way we were able to

230
00:10:28,133 --> 00:10:30,466
oh they're still using quotes here

231
00:10:31,266 --> 00:10:33,266
but you can imagine you'd be able to find

232
00:10:33,300 --> 00:10:35,500
a way with a little bit of

233
00:10:35,900 --> 00:10:37,600
iterative prompt development

234
00:10:37,733 --> 00:10:38,066
to

235
00:10:38,066 --> 00:10:40,266
kind of find a prompt that works more reliably every

236
00:10:40,266 --> 00:10:41,066
single time

237
00:10:42,066 --> 00:10:43,900
and so now we'll do another example

238
00:10:43,933 --> 00:10:46,266
it's always useful to check your tax before

239
00:10:46,266 --> 00:10:48,266
you post it in a public forum

240
00:10:48,266 --> 00:10:51,066
and so we'll go through an example of checking a review

241
00:10:51,733 --> 00:10:54,133
and so here is a review about a stuffed panda

242
00:10:54,266 --> 00:10:55,200
and so we're going to

243
00:10:55,200 --> 00:10:58,066
ask the model to proofread and correct the review

244
00:11:01,200 --> 00:11:03,200
great so we have this corrected version

245
00:11:03,466 --> 00:11:06,133
and one cool thing we can do is

246
00:11:06,133 --> 00:11:08,333
find the kind of differences between our

247
00:11:08,333 --> 00:11:10,766
original review and the model's output

248
00:11:11,066 --> 00:11:12,566
so we're going to use this

249
00:11:12,966 --> 00:11:15,100
red lines Python package to do this

250
00:11:15,100 --> 00:11:19,300
and to we're going to get the diff between the original

251
00:11:20,266 --> 00:11:23,200
text of our review and the model output

252
00:11:23,266 --> 00:11:25,133
and then display this

253
00:11:27,466 --> 00:11:29,866
and so here you can see the diff between

254
00:11:30,066 --> 00:11:33,400
the original review and the model output

255
00:11:33,400 --> 00:11:35,366
and the kind of things that have been corrected

256
00:11:35,733 --> 00:11:38,133
so the prompts that we use was

257
00:11:38,500 --> 00:11:40,133
proofread and correct this review

258
00:11:40,133 --> 00:11:43,666
but you can also make kind of more dramatic changes

259
00:11:43,666 --> 00:11:44,933
changes to tone

260
00:11:44,966 --> 00:11:45,933
that kind of thing

261
00:11:46,066 --> 00:11:48,100
so let's try

262
00:11:49,133 --> 00:11:50,400
one more thing

263
00:11:50,666 --> 00:11:51,900
so in this prompt

264
00:11:52,100 --> 00:11:52,866
we're going to

265
00:11:52,866 --> 00:11:54,800
ask the model to proofread and correct

266
00:11:54,800 --> 00:11:55,866
this same review

267
00:11:56,366 --> 00:11:58,100
but also make it more compelling

268
00:11:58,100 --> 00:12:00,533
and ensure that it follows APA style and

269
00:12:00,533 --> 00:12:02,066
targets an advanced reader

270
00:12:02,066 --> 00:12:03,800
and we're also going to ask for the output

271
00:12:03,800 --> 00:12:05,066
and markdown format

272
00:12:05,066 --> 00:12:06,200
and so we're using the same

273
00:12:06,200 --> 00:12:07,866
text from the original review

274
00:12:07,866 --> 00:12:08,666
up here

275
00:12:09,100 --> 00:12:10,500
so let's execute this

276
00:12:13,466 --> 00:12:14,966
and here we have a

277
00:12:15,366 --> 00:12:19,800
expanded APA style review of the Soft Panda

278
00:12:20,600 --> 00:12:22,466
so this is it for the transforming video

279
00:12:22,600 --> 00:12:25,066
next up we have expanding where we'll take

280
00:12:25,100 --> 00:12:27,766
a shorter prompt and kind of generate a longer

281
00:12:28,000 --> 00:12:31,300
more free form response from a language model

