1
00:00:05,266 --> 00:00:07,166
when I've been building applications with large

2
00:00:07,166 --> 00:00:08,133
language models

3
00:00:08,133 --> 00:00:09,066
I don't think I've ever

4
00:00:09,066 --> 00:00:11,133
come to the prompt that I ended up using in the final

5
00:00:11,133 --> 00:00:13,600
application on my first attempt

6
00:00:13,700 --> 00:00:15,333
and this isn't what matters

7
00:00:15,333 --> 00:00:17,800
as long as you have a good process to

8
00:00:17,866 --> 00:00:19,533
interestively make your prompt better

9
00:00:20,200 --> 00:00:22,166
then you'll be able to come to something that

10
00:00:22,166 --> 00:00:24,266
works well for the task you want to achieve

11
00:00:25,366 --> 00:00:26,900
you may have heard me say that when I

12
00:00:26,900 --> 00:00:28,000
trade a machine learning model

13
00:00:28,000 --> 00:00:29,966
it almost never works the first time

14
00:00:29,966 --> 00:00:30,766
in fact I'm

15
00:00:30,766 --> 00:00:33,466
very surprised if the first model I train works

16
00:00:33,533 --> 00:00:34,666
I think we're prompting

17
00:00:34,666 --> 00:00:35,733
the odds of it working

18
00:00:35,733 --> 00:00:37,866
the first time is maybe a little bit higher

19
00:00:37,933 --> 00:00:39,466
but as easy saying

20
00:00:39,966 --> 00:00:42,133
doesn't matter if the first prompt works

21
00:00:42,133 --> 00:00:43,866
what matters most of the process

22
00:00:43,900 --> 00:00:46,600
for getting two prompts that works for your application

23
00:00:46,866 --> 00:00:48,766
so with that let's jump into the code

24
00:00:48,766 --> 00:00:51,133
and let me show you some frameworks to think about

25
00:00:51,133 --> 00:00:52,333
how to iteratively

26
00:00:52,333 --> 00:00:53,466
develop a prompt

27
00:00:54,200 --> 00:00:54,966
right

28
00:00:54,966 --> 00:00:57,900
so if you've taken a machine learning course with me

29
00:00:58,000 --> 00:00:59,366
before you may have seen

30
00:00:59,600 --> 00:01:00,700
me use a diagram

31
00:01:00,700 --> 00:01:02,800
saying that with machine learning development

32
00:01:02,900 --> 00:01:04,200
you often have an idea

33
00:01:04,966 --> 00:01:06,533
and then implement it

34
00:01:06,533 --> 00:01:08,700
so write the code get the data

35
00:01:09,100 --> 00:01:10,100
train your model

36
00:01:10,100 --> 00:01:12,700
and that gives you an experimental result

37
00:01:12,700 --> 00:01:14,400
and you can then look at that output

38
00:01:14,600 --> 00:01:16,100
maybe do error analysis

39
00:01:16,100 --> 00:01:17,800
figure out where it's working or not working

40
00:01:17,800 --> 00:01:19,866
and then maybe even change your idea of

41
00:01:20,000 --> 00:01:22,200
exactly what problem you want to solve or how

42
00:01:22,200 --> 00:01:23,000
to approach it

43
00:01:23,333 --> 00:01:25,000
and they change implementation

44
00:01:25,100 --> 00:01:25,500
and

45
00:01:25,500 --> 00:01:27,933
run another experiment and so on and iterate over and

46
00:01:27,933 --> 00:01:30,966
over to get to an effective machine learning model

47
00:01:31,400 --> 00:01:33,200
if you're not familiar with machine learning

48
00:01:33,200 --> 00:01:33,866
and haven't seen

49
00:01:33,866 --> 00:01:34,600
this diagram before

50
00:01:34,600 --> 00:01:35,333
don't worry about it

51
00:01:35,333 --> 00:01:38,166
not that important for the rest of this presentation

52
00:01:38,400 --> 00:01:41,166
but when you are writing prompts

53
00:01:42,166 --> 00:01:44,666
to develop an application using an Lom

54
00:01:45,333 --> 00:01:48,166
the process can be quite similar

55
00:01:48,666 --> 00:01:50,666
where you have an idea for what you want to do

56
00:01:50,666 --> 00:01:51,900
the task you want to complete

57
00:01:52,133 --> 00:01:53,766
and you can then

58
00:01:54,166 --> 00:01:55,900
take a first attempt at writing

59
00:01:56,066 --> 00:01:59,300
a prompt that hopefully is clear and specific

60
00:01:59,733 --> 00:02:03,933
and maybe if appropriate gives the system time to think

61
00:02:04,400 --> 00:02:07,766
and then you can run it and see what result you get

62
00:02:07,800 --> 00:02:10,200
and if it doesn't work well not the first time

63
00:02:10,300 --> 00:02:12,133
then the iterative process of

64
00:02:12,266 --> 00:02:14,900
figuring out why the instructions for example were not

65
00:02:14,900 --> 00:02:15,533
clear enough

66
00:02:15,533 --> 00:02:17,766
or why it didn't give the album enough time to think

67
00:02:18,100 --> 00:02:20,466
allows you to refine the idea refine the prompt

68
00:02:20,533 --> 00:02:23,366
and so on and to go around this loop multiple times

69
00:02:23,566 --> 00:02:25,166
until you end up with a prompt that works for your

70
00:02:25,166 --> 00:02:26,000
application

71
00:02:26,733 --> 00:02:30,200
this too is why I personally have not paid

72
00:02:30,533 --> 00:02:31,800
as much attention

73
00:02:32,000 --> 00:02:35,133
to the internet articles that say 30 perfect proms

74
00:02:35,133 --> 00:02:35,933
because I think

75
00:02:36,000 --> 00:02:37,333
there probably isn't

76
00:02:37,333 --> 00:02:39,733
a perfect prompt for everything under the sun

77
00:02:39,733 --> 00:02:41,733
it's more important than you have a process

78
00:02:41,900 --> 00:02:43,666
for developing a good prompt for your

79
00:02:43,666 --> 00:02:45,066
specific application

80
00:02:46,000 --> 00:02:49,133
so let's look at an example together in code

81
00:02:49,133 --> 00:02:49,866
I have here

82
00:02:49,866 --> 00:02:52,500
the starter code that you saw in the previous videos

83
00:02:52,500 --> 00:02:54,400
have import Openai importos

84
00:02:54,800 --> 00:02:58,266
here we get the Openai API key

85
00:02:58,333 --> 00:03:00,733
and this is the same helper function that you saw

86
00:03:00,733 --> 00:03:01,933
as last time

87
00:03:02,700 --> 00:03:03,500
and

88
00:03:04,400 --> 00:03:08,366
I'm going to use as the running example in this video

89
00:03:08,600 --> 00:03:12,466
the toss of summarizing a fact sheet for a chair

90
00:03:13,166 --> 00:03:15,966
so let me just paste that in here

91
00:03:16,733 --> 00:03:19,300
and feel free to pause the video and

92
00:03:19,466 --> 00:03:22,333
read this more carefully in the notebook on the left

93
00:03:22,333 --> 00:03:25,133
if you want but here's a factory for a chair

94
00:03:25,166 --> 00:03:26,166
with a description

95
00:03:26,166 --> 00:03:28,166
saying it's part of a beautiful family of MT

96
00:03:28,266 --> 00:03:30,133
century inspired and so on

97
00:03:30,666 --> 00:03:31,933
talks about the construction

98
00:03:32,100 --> 00:03:33,466
has the dimensions

99
00:03:33,566 --> 00:03:36,766
options for the chair materials and so on

100
00:03:36,966 --> 00:03:37,900
comes from Italy

101
00:03:38,900 --> 00:03:42,166
so let's say you want to take this fat sheet

102
00:03:42,200 --> 00:03:45,100
and help a marketing team write the description

103
00:03:45,133 --> 00:03:47,500
for a online retail website

104
00:03:48,533 --> 00:03:49,500
let me just quickly

105
00:03:49,866 --> 00:03:53,800
run these three and then we'll come up with a prompt

106
00:03:56,600 --> 00:03:58,500
as follows and it just

107
00:03:59,333 --> 00:04:01,000
and it just paces in

108
00:04:02,166 --> 00:04:05,533
so my promptpss your task is to help a marketing team

109
00:04:05,666 --> 00:04:05,933
create

110
00:04:05,933 --> 00:04:07,766
a description for a retail website of the product

111
00:04:07,766 --> 00:04:09,000
based on techno fact sheet

112
00:04:09,166 --> 00:04:11,166
write the project description and so on

113
00:04:11,166 --> 00:04:13,666
right so this is my first attempt to

114
00:04:13,933 --> 00:04:16,900
explain the task to the large language model

115
00:04:17,200 --> 00:04:18,933
so let me hit shift enter

116
00:04:19,400 --> 00:04:21,333
and this takes a few seconds to run

117
00:04:23,366 --> 00:04:25,100
and we get this result

118
00:04:25,266 --> 00:04:27,700
it looks like it's done a nice job

119
00:04:27,866 --> 00:04:29,200
writing a description

120
00:04:29,200 --> 00:04:30,566
introducing a stunning Miss Entry

121
00:04:30,566 --> 00:04:31,700
Inspire Office Chair

122
00:04:31,700 --> 00:04:33,566
Perfect Edition and so on

123
00:04:33,866 --> 00:04:36,666
but when we look at this I go boy this is really long

124
00:04:36,666 --> 00:04:39,666
it's done a nice job doing exactly what I asked it to

125
00:04:39,866 --> 00:04:41,966
which is start from the technical fact sheet

126
00:04:42,100 --> 00:04:44,300
and write a private description

127
00:04:45,266 --> 00:04:46,700
but when I look at as I go

128
00:04:46,966 --> 00:04:48,000
this is kind of long

129
00:04:48,000 --> 00:04:50,300
maybe we wanted to be a little bit shorter

130
00:04:50,666 --> 00:04:52,933
so I have had an idea

131
00:04:52,966 --> 00:04:54,766
I wrote a prompt got a result

132
00:04:54,766 --> 00:04:56,866
I'm not that happier of it because it's too long

133
00:04:57,100 --> 00:05:01,333
so I will then clarify my prompt

134
00:05:03,133 --> 00:05:04,066
and say

135
00:05:05,666 --> 00:05:06,466
use

136
00:05:07,266 --> 00:05:09,133
utmost 50 words

137
00:05:09,500 --> 00:05:11,333
to try to give better guidance on

138
00:05:11,333 --> 00:05:12,733
the desired length of this

139
00:05:12,733 --> 00:05:14,266
and this run of the game

140
00:05:20,333 --> 00:05:22,366
okay this actually looks like a

141
00:05:22,366 --> 00:05:25,333
much nicer short description of the product

142
00:05:25,333 --> 00:05:27,366
introducing on mid century inspired office chair

143
00:05:27,566 --> 00:05:29,566
and so on 5 were you just

144
00:05:29,966 --> 00:05:32,733
both stylish and practical not bad

145
00:05:34,066 --> 00:05:37,500
and let me double check the length that this is

146
00:05:37,500 --> 00:05:39,100
so I'm going to take the response

147
00:05:39,166 --> 00:05:41,700
split it going to where the spaces and then

148
00:05:41,800 --> 00:05:42,866
you print out the length

149
00:05:42,866 --> 00:05:45,166
so it's 52 words actually not bad

150
00:05:46,100 --> 00:05:48,700
large language models are okay

151
00:05:48,700 --> 00:05:50,133
but not that great

152
00:05:50,133 --> 00:05:53,366
at following instructions about a very precise workout

153
00:05:53,366 --> 00:05:54,566
but this is actually not bad

154
00:05:54,566 --> 00:05:56,700
sometimes it will print out something with

155
00:05:56,966 --> 00:05:59,900
60 or 65 and so on words but it's kind of

156
00:06:00,133 --> 00:06:01,066
within reason

157
00:06:01,766 --> 00:06:04,333
some of the things you could try to do would be

158
00:06:04,800 --> 00:06:06,766
to say use at most the

159
00:06:07,300 --> 00:06:08,700
three sentences

160
00:06:14,200 --> 00:06:16,133
let me run that again

161
00:06:16,666 --> 00:06:18,933
but these are different ways to tell the large

162
00:06:18,933 --> 00:06:19,933
language model

163
00:06:19,966 --> 00:06:21,933
what's the length of the upput that you want

164
00:06:21,933 --> 00:06:24,400
so this is one 2

165
00:06:24,733 --> 00:06:28,300
3 I count three sentences it also did a pretty good job

166
00:06:28,666 --> 00:06:32,366
and then I've also seen people sometimes do things like

167
00:06:32,800 --> 00:06:35,766
I don't know use that most 280 characters

168
00:06:36,333 --> 00:06:38,333
large language models because of

169
00:06:38,400 --> 00:06:40,100
the way they interpret text

170
00:06:40,100 --> 00:06:41,733
using something called a tokenizer

171
00:06:41,733 --> 00:06:43,266
which which I won't talk about

172
00:06:43,466 --> 00:06:48,266
but they tend to be so so accounting characters but

173
00:06:49,200 --> 00:06:52,366
let's see 281 characters is actually surprising

174
00:06:52,366 --> 00:06:53,366
any close usually a

175
00:06:53,533 --> 00:06:56,333
large language model doesn't get it quite as close

176
00:06:56,333 --> 00:06:57,666
but these are different ways

177
00:06:57,700 --> 00:06:59,066
they can play with to try to

178
00:06:59,066 --> 00:07:00,666
control the length of the output

179
00:07:00,700 --> 00:07:02,166
that you get but then just

180
00:07:02,700 --> 00:07:05,766
switch about to use at most 50 words

181
00:07:09,066 --> 00:07:11,366
and that's our result that we had just now

182
00:07:12,733 --> 00:07:15,766
as we continue to refine this text for our websites

183
00:07:15,766 --> 00:07:18,100
we might decide that

184
00:07:18,466 --> 00:07:20,800
this website isn't selling

185
00:07:20,866 --> 00:07:23,366
director consumers is actually intended

186
00:07:23,500 --> 00:07:26,800
to sell furniture to furniture retailers

187
00:07:27,000 --> 00:07:29,400
that would be more interested in the technical

188
00:07:29,400 --> 00:07:30,666
details of the chair

189
00:07:30,666 --> 00:07:32,466
and the materials of the chair

190
00:07:32,733 --> 00:07:34,933
in that case you can take this prompt and say

191
00:07:35,400 --> 00:07:37,400
I want to modify this prompt

192
00:07:37,666 --> 00:07:39,700
to get it to be more precise

193
00:07:39,700 --> 00:07:41,766
about the technical details

194
00:07:42,300 --> 00:07:45,600
so let me keep on modifying this prompt

195
00:07:46,900 --> 00:07:47,933
and I'm going to say

196
00:07:48,800 --> 00:07:50,966
this description is intended for furniture retailers

197
00:07:50,966 --> 00:07:52,933
so should be technical and focus on materials

198
00:07:52,933 --> 00:07:54,466
products and construct it from

199
00:07:55,500 --> 00:07:56,766
well let's run that

200
00:07:58,533 --> 00:08:00,100
and let's see

201
00:08:01,533 --> 00:08:02,133
not bad

202
00:08:02,133 --> 00:08:05,666
says you know cult aluminum base and pneumatic care

203
00:08:06,766 --> 00:08:08,200
high quality materials

204
00:08:08,200 --> 00:08:11,266
so by changing the prompt you can get it to

205
00:08:11,400 --> 00:08:14,400
focus more on specific characters

206
00:08:14,400 --> 00:08:17,000
on specific characteristics you want it to

207
00:08:17,500 --> 00:08:18,300
and

208
00:08:18,966 --> 00:08:20,800
when I look at this I might decide

209
00:08:21,566 --> 00:08:23,100
at the end of the description

210
00:08:23,466 --> 00:08:26,666
I also wanted to include

211
00:08:27,300 --> 00:08:28,400
the product IDS

212
00:08:28,400 --> 00:08:31,400
so the two offerings of this share SWC110

213
00:08:31,933 --> 00:08:33,100
Soc 100

214
00:08:33,733 --> 00:08:34,533
so

215
00:08:35,133 --> 00:08:38,766
maybe I can further improve this prompt

216
00:08:39,966 --> 00:08:42,000
and to get it to give me the product IDS

217
00:08:42,000 --> 00:08:42,900
I can add this

218
00:08:42,900 --> 00:08:44,766
instruction at the end of the description

219
00:08:44,766 --> 00:08:45,566
include every

220
00:08:45,700 --> 00:08:48,200
7 character product ID in the technical specification

221
00:08:48,533 --> 00:08:49,333
and

222
00:08:49,900 --> 00:08:50,900
let's run it

223
00:08:51,666 --> 00:08:53,200
and see what happens

224
00:08:53,933 --> 00:08:56,866
and so this is introduced to our missections file

225
00:08:56,866 --> 00:08:57,733
office share

226
00:08:58,266 --> 00:09:02,600
shell colours tossel plastic coating aluminum base

227
00:09:02,800 --> 00:09:05,200
practical some options

228
00:09:06,300 --> 00:09:08,366
talk about the two product IDS

229
00:09:08,366 --> 00:09:09,933
so this looks pretty good

230
00:09:10,333 --> 00:09:12,466
and what you've just seen is a

231
00:09:12,800 --> 00:09:16,133
short example of the iterative prompt development

232
00:09:16,266 --> 00:09:18,600
that many developers will go through

233
00:09:19,200 --> 00:09:22,133
and I think our guidelines is

234
00:09:22,366 --> 00:09:23,566
in the last video

235
00:09:23,566 --> 00:09:26,800
you saw user share a number of best practices

236
00:09:26,800 --> 00:09:28,700
and so what I usually do is

237
00:09:28,733 --> 00:09:30,800
keep best practices like that in mind

238
00:09:30,933 --> 00:09:32,100
be clear and specific

239
00:09:32,100 --> 00:09:35,166
and if necessary give the model time to think

240
00:09:35,500 --> 00:09:38,200
with those in mind is worthwhiles often

241
00:09:38,500 --> 00:09:40,300
take a first attempt at writing a prompt

242
00:09:40,300 --> 00:09:41,933
see what happens and then

243
00:09:42,000 --> 00:09:44,766
go from there to iteratively refine the prompt

244
00:09:44,766 --> 00:09:46,166
to get closer and closer

245
00:09:46,400 --> 00:09:48,366
to the result that you need

246
00:09:49,733 --> 00:09:52,866
and so a lot of the successful prompts that you may see

247
00:09:52,900 --> 00:09:54,733
using various programs was

248
00:09:54,900 --> 00:09:57,200
arrive at an iterative process

249
00:09:57,400 --> 00:09:58,200
like this

250
00:09:58,933 --> 00:10:01,600
just for fun let me show you an example of

251
00:10:01,733 --> 00:10:03,133
an even more complex

252
00:10:03,133 --> 00:10:06,733
prompt that might give you a sense of what Chat GPT

253
00:10:07,133 --> 00:10:09,966
can do which is I've just added a few

254
00:10:10,200 --> 00:10:11,500
extra instructions here

255
00:10:11,766 --> 00:10:12,600
after the description

256
00:10:12,600 --> 00:10:15,100
include the table that use the product dimensions

257
00:10:15,100 --> 00:10:17,500
and then you'll format everything as HTML

258
00:10:17,500 --> 00:10:18,766
so let's run that

259
00:10:21,166 --> 00:10:22,200
and in practice

260
00:10:22,300 --> 00:10:24,800
you would end up with a prompt like this

261
00:10:24,933 --> 00:10:27,066
really only after multiple iterations

262
00:10:27,066 --> 00:10:28,366
I don't think I know anyone

263
00:10:28,666 --> 00:10:31,566
that would write this exact prompt the first time

264
00:10:31,700 --> 00:10:32,666
they were trying to

265
00:10:32,900 --> 00:10:35,100
get the system to process a fact sheet

266
00:10:35,866 --> 00:10:39,933
and so this actually outputs a bunch of HDML

267
00:10:40,500 --> 00:10:42,966
let's display the HDML

268
00:10:43,266 --> 00:10:45,166
to see if this is even valid

269
00:10:45,200 --> 00:10:46,966
HDML and see if this works

270
00:10:47,333 --> 00:10:49,133
and I don't actually know what's going to work

271
00:10:49,133 --> 00:10:49,766
but let's see

272
00:10:49,766 --> 00:10:51,766
oh cool alright looks like I rend it

273
00:10:52,400 --> 00:10:53,866
so it has this really nice

274
00:10:53,866 --> 00:10:55,566
looking description of a chair

275
00:10:56,700 --> 00:10:59,266
construction materials

276
00:10:59,466 --> 00:11:00,900
product dimensions

277
00:11:03,333 --> 00:11:05,933
oh it looks like I left out the user

278
00:11:05,933 --> 00:11:07,300
most 50 words instructions

279
00:11:07,300 --> 00:11:09,266
so this is a little bit long but if you want that

280
00:11:09,266 --> 00:11:12,066
you can even feel free to pause the video

281
00:11:12,066 --> 00:11:14,166
tell it to be more succinct and

282
00:11:14,166 --> 00:11:16,733
regenerate this and see what results you get

283
00:11:17,866 --> 00:11:19,900
so I hope you take away from this video

284
00:11:19,900 --> 00:11:22,766
that prompt development is an iterative process

285
00:11:22,766 --> 00:11:23,566
try something

286
00:11:23,766 --> 00:11:27,133
see how it does not yet fulfill exactly what you want

287
00:11:27,400 --> 00:11:28,800
and then think about how to

288
00:11:28,800 --> 00:11:31,600
clarify your instructions or in some cases

289
00:11:31,666 --> 00:11:33,933
think about how to give it more space to think

290
00:11:34,200 --> 00:11:35,466
to get it closer

291
00:11:35,500 --> 00:11:37,533
to delivering the results that you want

292
00:11:38,866 --> 00:11:41,100
and I think the key to being an

293
00:11:41,100 --> 00:11:42,866
effective prompt engineer

294
00:11:43,100 --> 00:11:46,533
isn't so much about knowing the perfect prompt

295
00:11:46,666 --> 00:11:49,733
is about having a good process to develop prompts

296
00:11:49,733 --> 00:11:50,866
that are effective

297
00:11:50,900 --> 00:11:52,366
for your application

298
00:11:52,933 --> 00:11:54,900
and in this video I illustrated

299
00:11:55,300 --> 00:11:58,166
developing a prompt using just one example

300
00:11:58,666 --> 00:12:01,133
for more sophisticated applications

301
00:12:01,166 --> 00:12:02,700
sometimes you will have

302
00:12:03,366 --> 00:12:07,300
multiple examples say a list of 10 or even

303
00:12:07,466 --> 00:12:09,400
50 or 100 fat sheets

304
00:12:09,533 --> 00:12:13,200
and iteratively develop a prompt and evaluated

305
00:12:13,533 --> 00:12:16,500
against a large set of cases

306
00:12:18,300 --> 00:12:21,333
but for the early development of most applications

307
00:12:21,466 --> 00:12:23,533
I see many people developing it

308
00:12:23,533 --> 00:12:26,500
sort of the way I am with just one example

309
00:12:26,766 --> 00:12:29,566
but then for more mature applications sometimes

310
00:12:29,866 --> 00:12:31,200
it could be useful

311
00:12:31,566 --> 00:12:35,266
to evaluate prompt against a larger set of examples

312
00:12:35,266 --> 00:12:36,066
such as

313
00:12:36,700 --> 00:12:38,500
to test different Proms on

314
00:12:38,733 --> 00:12:39,966
dozens of fact sheets

315
00:12:39,966 --> 00:12:42,766
to see how is average or worst case performances

316
00:12:42,766 --> 00:12:44,266
on multiple fact sheets

317
00:12:44,266 --> 00:12:46,800
but usually you end up doing that

318
00:12:46,900 --> 00:12:48,800
only when an application is more mature

319
00:12:48,800 --> 00:12:50,300
and you have to have those metrics

320
00:12:50,300 --> 00:12:51,700
to drive that incremental

321
00:12:51,700 --> 00:12:54,133
last few steps of prompt improvement

322
00:12:55,166 --> 00:12:56,000
so with that

323
00:12:56,266 --> 00:12:59,266
please do play with the Jupiter code notebook

324
00:12:59,266 --> 00:13:01,866
examples and try out different variations and

325
00:13:01,900 --> 00:13:03,200
see what results you get

326
00:13:03,566 --> 00:13:04,500
and when you're done

327
00:13:04,700 --> 00:13:06,333
let's go on to the next video

328
00:13:06,533 --> 00:13:09,400
where we'll talk about one very common

329
00:13:09,500 --> 00:13:13,400
use of large language models in software applications

330
00:13:13,466 --> 00:13:15,533
which is to summarise text

331
00:13:15,600 --> 00:13:18,133
so when you're ready let's go on to the next video

